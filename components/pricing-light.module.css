/* components/pricing-light.module.css */

/* ---- Tokens (scoped to the pricing wrapper) -------------------------- */
.vars {
  --surface: #ffffff;
  --surface-muted: #f5f7fb;
  --text: #0f172a;
  --row: #e5e7eb;
  --btn-neutral: #e5e7eb;
  --btn-neutral-hover: #e2e8f0;
  --purple: #8b5cf6;
  --purple-dark: #7c3aed;
  --green: #10b981;
  --radius: 16px;
  --shadow: 0 6px 18px rgba(2, 6, 23, 0.06);

  /* measured in JS; fallbacks keep things usable before JS runs */
  --head-h: 120px; /* total height of card head (up to & incl. button) */
  --btn-top: 50%;
}

/* ---- Grid ------------------------------------------------------------ */
.wrap {
  display: grid;
  /* four equal columns so the labels column matches card widths */
  grid-template-columns: repeat(4, minmax(0, 1fr));
  gap: 2px; /* ultra-tight spacing */
}

@media (max-width: 1023px) {
  .wrap { grid-template-columns: 1fr; gap: 12px; }
}

/* ---- Columns --------------------------------------------------------- */
.labelsCol {
  position: relative; /* for absolute toggle placement */
  background: var(--surface-muted);
  border: 1px solid var(--row);
  border-radius: var(--radius);
  padding: 20px 18px 24px;
  color: var(--text);
  min-width: 0; /* allow equal shrink with the grid */
}

/* spacer that matches the measured plan header height */
.headShim {
  height: var(--head-h);
  min-height: 120px; /* safety */
}

/* place the toggle over the header space so it aligns with buttons */
.toggleLine {
  position: absolute;
  left: 18px;
  right: 18px;
  top: calc(var(--head-h) - 22px); /* centerline of a 44px button */
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  gap: 10px;
  color: var(--text);
  margin: 0 !important; /* defeat inline margin-bottom */
}

/* plan cards */
.card {
  background: var(--surface);
  border: 1px solid var(--row);
  border-radius: var(--radius);
  box-shadow: var(--shadow);
  color: var(--text);
  position: relative;
  padding: 20px 18px 40px;
  min-height: 100%;
  overflow: visible;
  min-width: 0; /* allow equal shrink with the grid */
}
.featured { outline: 2px solid var(--purple); }
.head { padding-bottom: 16px; }

/* ---- Text ------------------------------------------------------------ */
.h3 {
  font-size: 1.1rem;
  font-weight: 700;
  margin-bottom: 10px;
  color: var(--purple) !important; /* purple headings */
}
.priceRow { display: flex; align-items: baseline; gap: 6px; margin: 2px 0 10px; }
.curr, .per { color: var(--text); font-weight: 600; }
.value { font-size: 2rem; line-height: 1.1; font-weight: 800; color: var(--text); }
.blurb { color: var(--text); margin-bottom: 14px; }

/* ---- Rows / dividers ------------------------------------------------- */
.hr { border: 0; border-top: 1px solid var(--row); margin: 16px 0; }

.row {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 10px 0;
  border-bottom: 1px solid var(--row);
}
.row:last-child { border-bottom: 0; }
.check { width: 12px; height: 9px; fill: var(--purple); flex: 0 0 12px; }

/* prevent wrapping of labels so rows align perfectly with values */
.labelsCol .row {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.labelsCol .row span { white-space: inherit; }

/* ---- Buttons --------------------------------------------------------- */
.btn {
  display: inline-flex; justify-content: center; align-items: center;
  width: 100%; height: 44px; border-radius: 9999px; font-weight: 700;
  transition: background .15s ease, transform .05s ease, filter .15s ease;
  user-select: none;
}
.btnNeutral { background: var(--btn-neutral); color: var(--text); }
.btnNeutral:hover { background: var(--btn-neutral-hover); }
.btnNeutral:active { transform: translateY(1px); }
.btnPrimary {
  background: linear-gradient(90deg, var(--purple) 0%, var(--purple-dark) 100%);
  color: #fff;
}
.btnPrimary:hover { filter: brightness(.98); }
.btnPrimary:active { transform: translateY(1px); }

/* ---- Toggle line accent ---------------------------------------------- */
.discount { color: var(--green) !important; font-weight: 700; }

/* Keep text black even if parent has Tailwind text utilities */
.forceText * { color: var(--text) !important; }
.forceText .discount { color: var(--green) !important; }
